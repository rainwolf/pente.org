<!-- TODO war up webapp and deploy, would require a DSG_HOME variable
     or something to point to conf/ jive3/ logs/ -->

<project name="dsg" default="dev" basedir=".">
	
  <target name="dev"
	      depends="init,buildDirectories,reconfig,buildClient,buildServer" />

  <target name="full"
          depends="init,buildDirectories,buildWebappConfig,reconfig,copyJwsLibs,jarClient,jarTutorial,
  	               jarDemo,jarPuzzle,jarTb,buildServer,warFull" />

	
  <target name="init">

    <!-- init DSTAMP property -->
    <tstamp />
    
    <!-- access to environment variables -->
    <property environment="env" />
  	
    <!-- temp build directory -->
    <property name="dsg.build.tmp" value="${java.io.tmpdir}/dsg/" />
      
    <!-- source directory locations -->
    <property name="dsg.src" value=".." />
    <property name="dsg.src.build" value="${dsg.src}/build" />
    <property name="dsg.src.conf" value="${dsg.src}/conf" />
    <property name="dsg.src.gameServer" value="${dsg.src}/httpdocs/gameServer" />
    <property name="dsg.src.java" value="${dsg.src}/java" />
    <property name="dsg.src.lib" value="${dsg.src}/lib" />
    <property name="dsg.src.sql" value="${dsg.src}/sql" />

    <!-- dev destination directory locations -->
    <property name="dsg.dev.dest.conf" value="${conf}" />
    <property name="dsg.dev.dest.classes" value="${webapp}/WEB-INF/classes" />
    <property name="dsg.dev.dest.gameServer" value="${webapp}/gameServer" />
    <property name="dsg.dev.dest.lib" value="${webapp}/WEB-INF/lib" />
    <property name="dsg.dev.dest.log" value="${log}" />
    <property name="dsg.dev.dest.data" value="${data}" />
    <property name="dsg.dev.dest.game" value="${data}/game" />
    <property name="dsg.dev.dest.player" value="${data}/player" />
    <property name="dsg.dev.dest.tournament" value="${data}/tournament" />
    <property name="dsg.dev.dest.web-inf" value="${webapp}/WEB-INF" />
    <property name="dsg.dev.dest.meta-inf" value="${webapp}/META-INF" />

    <property name="dsg.classpath" value="${dsg.src.lib}/servlet.jar;
                                          ${dsg.src.lib}/log4j-1.2.8.jar;
                                          ${dsg.src.lib}/jdbc2_0-stdext.jar;
                                          ${dsg.src.lib}/activation.jar;
                                          ${dsg.src.lib}/mail.jar;
                                          ${dsg.src.lib}/jaxp.jar;
        								  ${dsg.src.lib}/swingx-0.9.1.jar;
                                          ${dsg.src.lib}/commons-codec-1.3.jar;
                                          ${dsg.src.lib}/junit-3.7.jar;
                                          ${dsg.src.lib}/commons-collections.jar;
                                          ${dsg.src.lib}/commons-dbcp-1.1.jar;
                                          ${dsg.src.lib}/commons-pool-1.1.jar;
                                          ${dsg.src.lib}/commons-fileupload-1.0.jar;
                                          ${dsg.src.lib}/hibernate2.jar;
                                          ${dsg.src.lib}/jivebase.jar;
                                          ${dsg.src.lib}/jiveforums.jar;
                                          ${dsg.src.lib}/jai_codec.jar;
                                          ${dsg.src.lib}/jai_core.jar;
                                          ${dsg.src.lib}/jcert.jar;
    									  ${dsg.src.lib}/jogl.jar;
		  								  ${dsg.src.lib}/jfreechart-1.0.2.jar;
    									  ${dsg.src.lib}/jcommon-1.0.5.jar;
                                          ${dsg.src.lib}/rome-1.0RC1.jar;
    									  ${dsg.src.lib}/mysql-connector-java-3.1-nightly-20050818-bin.jar;" />
  	

  </target>
 
  <target name="reconfig" if="reconfig">

    <copy todir="${dsg.dev.dest.conf}">
      <fileset dir="${dsg.src.conf}">
      	<exclude name="ai_config.xml" />
        <exclude name="web.xml" />
        <exclude name="log4j.properties" />
        <exclude name="ehcache.xml" />
        <exclude name="context.xml" />
        <exclude name="hibernate.properties" />
        <exclude name="pente.jnlp" />
        <exclude name="jive3/**" />
      </fileset>
    </copy>

    <copy todir="${jiveHome}">
      <fileset dir="${dsg.src.conf}/jive3">
        <exclude name="custom-actions.xml" />
        <exclude name="jive_i18n_en.properties" />
      </fileset>
    </copy>
  	
	<!-- reconfigure jive config file -->
    <copy todir="${jiveHome}" overwrite="true">
      <fileset dir="${dsg.src.conf}/jive3">
  	    <include name="jive_config.xml" />
      </fileset>
      <filterset>
        <filter token="mail.smtp.host" value="${mail.smtp.host}" />
        <filter token="mail.smtp.user" value="${mail.smtp.user}" />
        <filter token="mail.smtp.password" value="${mail.smtp.password}" />
        <filter token="mail.imap.host" value="${mail.imap.host}" />
        <filter token="mail.imap.user" value="${mail.imap.user}" />
        <filter token="mail.imap.password" value="${mail.imap.password}" />
        <filter token="cookieKey" value="${cookieKey}" />
      </filterset>
    </copy>

  	<!-- reconfigure ai_config.xml for tomcat -->
  	<copy todir="${conf}" overwrite="true">
  	  <fileset dir="${dsg.src.conf}">
  	    <include name="ai_config.xml" />
  	  </fileset>
  	  <filterset>
  	    <filter token="conf" value="${conf}" />
  	  </filterset>
  	</copy>
    
  </target>
	
  <!-- copy/make dev directories -->
  <target name="buildDirectories" depends="init">
  	
    <copy todir="${dsg.dev.dest.web-inf}/classes">

      <fileset dir="${dsg.src.conf}/jive3">
        <include name="jive_i18n_en.properties" />
        <include name="custom-actions.xml" />
      </fileset>
    </copy>

    <mkdir dir="${dsg.dev.dest.classes}" />

    <copy todir="${dsg.dev.dest.gameServer}/lib">
        <fileset dir="${dsg.src.gameServer}/lib" includes="*.au" />
  	</copy>
  	<!-- jws requires sound files be in same dir as dsg.jnlp i guess -->
    <copy todir="${dsg.dev.dest.gameServer}">
        <fileset dir="${dsg.src.gameServer}/lib" includes="*.au" />
  	</copy>

    <copy todir="${dsg.dev.dest.gameServer}">
      <fileset dir="${dsg.src.gameServer}" />
    </copy>
  	
    <copy todir="${webapp}">
	  <fileset dir="${dsg.src}/httpdocs/" />
   	</copy>

    <copy todir="${dsg.dev.dest.gameServer}/lib">
      <fileset dir="${dsg.src.gameServer}/lib" />
    </copy>
    <!-- location for java web start jars -->
    <mkdir dir="${dsg.dev.dest.gameServer}/lib/jws" />

    <copy todir="${dsg.dev.dest.lib}">
      <fileset dir="${dsg.src.lib}"
           includes="*.jar"
           excludes="servlet.jar,
                     jdbc2_0-stdext.jar,
                     jaxp.jar,
                     jsse.jar,
                     ant.jar,
      	             mysql-connector-java*.jar,
                     commons-collections*.jar,
      	             commons-dbcp*.jar,
      			     commons-logging*.jar,
      	             commons-pool*.jar,
      	             commons-code*.jar" />
    </copy>

    <mkdir dir="${dsg.dev.dest.log}" />

    <mkdir dir="${dsg.dev.dest.game}" />
    <mkdir dir="${dsg.dev.dest.player}" />
    <mkdir dir="${dsg.dev.dest.tournament}" />
    <mkdir dir="${dsg.dev.dest.data}/gameServer" />
    <mkdir dir="${dsg.dev.dest.data}/gameServer/game" />
    <mkdir dir="${dsg.dev.dest.data}/gameServer/player" />
  	

  	
  </target>

  <target name="buildWebappConfig" depends="buildDirectories">

    <!-- reconfigure web.xml -->
    <copy todir="${dsg.dev.dest.web-inf}"
          overwrite="true">
      <fileset dir="${dsg.src.conf}">
        <include name="web.xml" />
      </fileset>
      <filterset>
        <filter token="appletVersion" value="${appletVersion}" />
        <filter token="log" value="${log}" />
        <filter token="conf" value="${conf}" />
        <filter token="data" value="${data}" />
        <filter token="jiveHome" value="${jiveHome}" />
        <filter token="emailEnabled" value="${emailEnabled}" />
        <filter token="mail.smtp.host" value="${mail.smtp.host}" />
        <filter token="mail.smtp.port" value="${mail.smtp.port}" />
        <filter token="mail.smtp.user" value="${mail.smtp.user}" />
        <filter token="mail.smtp.password" value="${mail.smtp.password}" />
        <filter token="mail.imap.host" value="${mail.imap.host}" />
        <filter token="mail.imap.user" value="${mail.imap.user}" />
        <filter token="mail.imap.password" value="${mail.imap.password}" />
      </filterset>
    </copy>


  	<!-- update log4j.properties with log file path -->
    <copy todir="${dsg.dev.dest.classes}"
          overwrite="true">
      <fileset dir="${dsg.src.conf}">
        <include name="log4j.properties" />
      </fileset>
      <filterset>
        <filter token="log" value="${log}" />
      </filterset>
    </copy>
  	
	<!-- reconfigure pente.jnlp -->
	<copy todir="${dsg.dev.dest.gameServer}"
	      overwrite="true">
	  <fileset dir="${dsg.src.conf}">
	    <include name="pente.jnlp" />
	  </fileset>
	  <filterset>
	    <filter token="appletVersion" value="${appletVersion}" />
	  </filterset>
	</copy>
  	<!-- reconfigure context.xml for tomcat -->
  	<copy todir="${dsg.dev.dest.meta-inf}" overwrite="true">
  	  <fileset dir="${dsg.src.conf}">
  	    <include name="context.xml" />
  	  </fileset>
  	  <filterset>
  	    <filter token="appletVersion" value="${appletVersion}" />
  	    <filter token="log" value="${log}" />
  	    <filter token="db.user" value="${db.user}" />
  	    <filter token="db.password" value="${db.password}" />
  	    <filter token="db.host" value="${db.host}" />
  	    <filter token="db.name" value="${db.name}" />
  	    <filter token="db_ro.user" value="${db_ro.user}" />
  	    <filter token="db_ro.password" value="${db_ro.password}" />
  	    <filter token="db_ro.host" value="${db_ro.host}" />
  	    <filter token="db_ro.name" value="${db_ro.name}" />
  	  </filterset>
  	</copy>
  </target>
	
  <!-- copy over prev. versions of jws dsg libs, so that clients can update incrementally -->
  <target name="checkJwsLibs" if="currentJwsLibsDir">
  	<available file="${currentJwsLibsDir}" type="dir" property="currentJwsLibsDirExists"/>
  </target>
  <target name="copyJwsLibs" if="currentJwsLibsDirExists" depends="checkJwsLibs">
    <copy todir="${dsg.dev.dest.gameServer}/lib/jws">
  	  <fileset dir="${currentJwsLibsDir}"
  	  	       includes="*.jar" />
  	</copy>
  </target>

  <target name="buildServer" depends="buildDirectories">

  	<!-- copy for webapp -->
    <javac srcdir="${dsg.src.java}"
           destdir="${dsg.dev.dest.classes}"
           classpath="${dsg.classpath}"
           debug="on"
           debuglevel="lines,vars,source"
    	   excludes="org/pente/tools/**,org/pente/opengl/**,org/pente/gameDatabase/swing/test/**" />

  </target>

	
	
  <target name="buildClient" depends="buildDirectories">

    <!-- debug="on"    debuglevel="lines,vars,source" -->
  	
    <javac srcdir="${dsg.src.java}"
           includes="org/pente/gameServer/client/awt/PenteApplet.java,
                     org/pente/gameServer/core/*PlayerData*.java,
                     org/pente/gameServer/event/*.java,
    	             org/pente/game/SimpleGameEventData.java"
           excludes="org/pente/gameServer/event/ServerSocketDSGEventHandler.java,
    	       org/pente/gameServer/core/SynchronizedQueue.java"
           destdir="${dsg.dev.dest.gameServer}/lib"
           classpath="${dsg.classpath}"
    	   debug="off"
           target="1.1"
           source="1.2" />

    </target>
	
	<target name="jarClient" depends="buildClient">

	  <!-- delete previous versions of client applet -->
      <delete>
	      <fileset dir="${dsg.dev.dest.gameServer}/lib"
	               includes="pente*.jar" />
	  </delete>
		
      <jar jarfile="${dsg.dev.dest.gameServer}/lib/pente__V${appletVersion}.jar">
        <fileset dir="${dsg.dev.dest.gameServer}/lib"
	        includes="org/**, *.au"
            excludes="org/pente/gameServer/event/ServerSocketDSGEventHandler.class" />
      </jar>

      <!-- copy to jws area -->
      <copy todir="${dsg.dev.dest.gameServer}/lib/jws"
            file="${dsg.dev.dest.gameServer}/lib/pente__V${appletVersion}.jar" />
  	
  </target>

  <target name="jarTutorial" depends="init">

    <mkdir dir="${dsg.build.tmp}/tutorial" />

    <javac srcdir="${dsg.src.java}"
           includes="org/pente/tutorial/TutorialApplet.java"
           destdir="${dsg.build.tmp}/tutorial"
           classpath="${dsg.classpath}"
           target="1.1"
           source="1.2" />

    <jar jarfile="${dsg.build.tmp}/tutorial.jar">
      <fileset dir="${dsg.build.tmp}/tutorial" />
    </jar>

    <copy todir="${dsg.dev.dest.gameServer}/lib"
          file="${dsg.build.tmp}/tutorial.jar" />

  </target>

  <target name="jarDb2" depends="init">

    <mkdir dir="${dsg.build.tmp}/db2" />

  	
    <javac srcdir="${dsg.src.java}"
           includes="org/pente/gameDatabase/swing/Main.java,org/pente/gameDatabase/swing/install/**"
           destdir="${dsg.build.tmp}/db2"
           debug="on"
           debuglevel="lines,vars,source"
           classpath="${dsg.classpath}" />

    <copy todir="${dsg.build.tmp}/db2/org/pente/gameDatabase/swing/images">
    	<fileset dir="${dsg.src}/images" />
    </copy>
    	
    <jar jarfile="${dsg.build.tmp}/db2.jar">
      <fileset dir="${dsg.build.tmp}/db2" />
    </jar>

  </target>
	
  <target name="jarDemo" depends="init">

    <mkdir dir="${dsg.build.tmp}/demo" />

    <javac srcdir="${dsg.src.java}"
           includes="org/pente/demo/DemoApplet.java"
           destdir="${dsg.build.tmp}/demo"
           classpath="${dsg.classpath}"
           target="1.1"
           source="1.2" />

    <jar jarfile="${dsg.build.tmp}/demo.jar">
      <fileset dir="${dsg.build.tmp}/demo" />
    </jar>

    <copy todir="${dsg.dev.dest.gameServer}/lib"
          file="${dsg.build.tmp}/demo.jar" />

  </target>
	
  <target name="jarPuzzle" depends="init">

    <mkdir dir="${dsg.build.tmp}/puzzle" />

    <javac srcdir="${dsg.src.java}"
           includes="org/pente/gameServer/client/puzzle/PuzzleApplet.java"
    	   destdir="${dsg.build.tmp}/puzzle"
           classpath="${dsg.classpath}"
           target="1.1"
           source="1.2"  />

    <jar jarfile="${dsg.build.tmp}/puzzle.jar">
      <fileset dir="${dsg.build.tmp}/puzzle" />
    </jar>

    <copy todir="${dsg.dev.dest.gameServer}/lib"
          file="${dsg.build.tmp}/puzzle.jar" />

  </target>

  <target name="buildTb" depends="init">

    <mkdir dir="${dsg.build.tmp}/tb" />
	
    <javac srcdir="${dsg.src.java}"
           includes="org/pente/turnBased/swing/TBApplet.java"
    	   destdir="${dsg.build.tmp}/tb"
           classpath="${dsg.classpath}"
           debug="on"
    	   source="1.3"
    	   target="1.3"
           debuglevel="lines,vars,source" />

  	<!-- for opengl client
    <javac srcdir="${dsg.src.java}"
           includes="org/pente/opengl/test/*.java"
    	   destdir="${dsg.build.tmp}/tb"
           classpath="${dsg.classpath}"

           debug="on"
           debuglevel="lines,vars,source" />
  	
  	<copy file="${dsg.src.lib}/jogl.dll"
          todir="${dsg.build.tmp}/tb" />
  	
  	<mkdir dir="${dsg.build.tmp}/tb/org/pente/opengl/graphics" />
  	<copy todir="${dsg.build.tmp}/tb/org/pente/opengl/graphics">
  	  <fileset dir="${dsg.src}/graphics"
  		       includes="*.png" />
  	</copy>
  	
  	-->
  </target>

  <target name="jarTb" depends="buildTb">

    <jar jarfile="${dsg.build.tmp}/tb__V${appletVersion}.jar">
      <fileset dir="${dsg.build.tmp}/tb" />
    </jar>

  	<!-- for opengl
  	<signjar jar="${dsg.build.tmp}/tb__V${appletVersion}.jar"
  		alias="dweebo" storepass="${jarsignPass}" />
  	-->
    <copy todir="${dsg.dev.dest.gameServer}/lib"
          file="${dsg.build.tmp}/tb__V${appletVersion}.jar" />

  	<!-- for opengl
  	<copy todir="${dsg.dev.dest.gameServer}/lib"
  		  file="${dsg.src.lib}/jogl.jar" />
  	-->
  </target>

  <target name="devTb" depends="init">
  	<delete dir="${dsg.build.tmp}/tb" />
  	<delete file="${dsg.build.tmp}/tb*.jar" />
  </target>
	
  <target name="warFull">
    <jar destfile="${build}/ROOT.war">
      <fileset dir="${webapp}" />
    </jar>
  	<!-- make a copy for backup -->
  	<copy tofile="${build}/ROOT-${appletVersion}.war">
  	  <fileset dir="${build}" includes="ROOT.war" />
    </copy>
  </target>

</project>
