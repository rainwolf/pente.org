services:
  replica_auto_ssh:
    build:
      dockerfile: AutoSSH.Dockerfile
    image: replica_auto_ssh
    restart: always
    environment:
      - LOCAL_PORT=${REPLICA_LOCAL_PORT}
      - REMOTE_PORT=${REPLICA_REMOTE_PORT}
      - USER_AT_HOST=${REPLICA_USER_AT_HOST}
      - MONITORING_PORT=${REPLICA_MONITORING_PORT}
    ports:
      - '127.0.0.1:${REPLICA_LOCAL_PORT}:${REPLICA_LOCAL_PORT}'
    volumes:
      - ~/.ssh:/root/.ssh
    healthcheck:
      test: ["CMD-SHELL", "mariadb -u${MYSQL_USER} -p${MYSQL_PASSWORD} -h 127.0.0.1 -P ${REPLICA_LOCAL_PORT} ${MYSQL_DATABASE} -e \"select * from dsg_donation limit 1\""]
      interval: 10s
      timeout: 5s
      retries: 1000
    networks:
      - pente_org
    deploy:
      resources:
        limits:
          memory: 64M
  replica_db:
    build:
      dockerfile: mariadb.Dockerfile
    image: replica_db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/lib/mysql/dsg/temp_tb.MYI"]
      interval: 10s
      timeout: 5s
      retries: 1000
    environment:  # values from .env file
      - MYSQL_INITDB_SKIP_TZINFO=Y
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_RO_USER}
      - MYSQL_PASSWORD=${MYSQL_RO_PASSWORD}
      - REPLICATION_USER=${REPLICATION_USER}
      - REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
      - REPLICA_LOCAL_PORT=${REPLICA_LOCAL_PORT}
#      - max_binlog_size=${max_binlog_size}
#      - replica_pending_jobs_size_max=${replica_pending_jobs_size_max}
#      - max_allowed_packet=${max_allowed_packet}
#      - replica_max_allowed_packet=${replica_max_allowed_packet}
    ports:
      - '127.0.0.1:${DSG_REMOTE_PORT}:3306'
    networks:
      - pente_org
    volumes:  # make the sh files executable
      - ./dockerReplica/dbConfig:/etc/mysql/conf.d
      - ./dockerReplica/db:/var/lib/mysql
      - ./dockerReplica/dbInit:/docker-entrypoint-initdb.d
      - ./dockerReplica/dbAlwaysInit:/always-initdb.d
      - ./dockerMain/dbUpdateRoot:/update-root-initdb.d
    depends_on:
      replica_auto_ssh:
        condition: service_healthy
  pentai:
    build:
      dockerfile: pentai.Dockerfile
    image: pentai
    restart: always
    environment:
      - PENTAIPASSWORD=${PENTAIPASSWORD}
    healthcheck:
      test: ps ax | grep [p]ython || exit 1
      interval: 10s
      timeout: 5s
      retries: 1000
    depends_on:
      replica_auto_ssh:
        condition: service_healthy
networks:
  pente_org:
    driver: bridge
    name: pente_org
